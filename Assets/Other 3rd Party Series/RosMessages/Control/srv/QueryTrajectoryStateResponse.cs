//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Control
{
    [Serializable]
    public class QueryTrajectoryStateResponse : Message
    {
        public const string k_RosMessageName = "control_msgs/QueryTrajectoryState";
        public override string RosMessageName => k_RosMessageName;

        public bool success;
        //  indicate successful run of triggered service
        public string message;
        //  informational, e.g. for error messages
        public string[] name;
        public double[] position;
        public double[] velocity;
        public double[] acceleration;

        public QueryTrajectoryStateResponse()
        {
            this.success = false;
            this.message = "";
            this.name = new string[0];
            this.position = new double[0];
            this.velocity = new double[0];
            this.acceleration = new double[0];
        }

        public QueryTrajectoryStateResponse(bool success, string message, string[] name, double[] position, double[] velocity, double[] acceleration)
        {
            this.success = success;
            this.message = message;
            this.name = name;
            this.position = position;
            this.velocity = velocity;
            this.acceleration = acceleration;
        }

        public static QueryTrajectoryStateResponse Deserialize(MessageDeserializer deserializer) => new QueryTrajectoryStateResponse(deserializer);

        private QueryTrajectoryStateResponse(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.success);
            deserializer.Read(out this.message);
            deserializer.Read(out this.name, deserializer.ReadLength());
            deserializer.Read(out this.position, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.velocity, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.acceleration, sizeof(double), deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.success);
            serializer.Write(this.message);
            serializer.WriteLength(this.name);
            serializer.Write(this.name);
            serializer.WriteLength(this.position);
            serializer.Write(this.position);
            serializer.WriteLength(this.velocity);
            serializer.Write(this.velocity);
            serializer.WriteLength(this.acceleration);
            serializer.Write(this.acceleration);
        }

        public override string ToString()
        {
            return "QueryTrajectoryStateResponse: " +
            "\nsuccess: " + success.ToString() +
            "\nmessage: " + message.ToString() +
            "\nname: " + System.String.Join(", ", name.ToList()) +
            "\nposition: " + System.String.Join(", ", position.ToList()) +
            "\nvelocity: " + System.String.Join(", ", velocity.ToList()) +
            "\nacceleration: " + System.String.Join(", ", acceleration.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Response);
        }
    }
}

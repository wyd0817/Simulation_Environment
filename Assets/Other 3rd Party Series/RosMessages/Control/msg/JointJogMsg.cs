//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Control
{
    [Serializable]
    public class JointJogMsg : Message
    {
        public const string k_RosMessageName = "control_msgs/JointJog";
        public override string RosMessageName => k_RosMessageName;

        //  Used in time-stamping the message.
        public Std.HeaderMsg header;
        //  Name list of the joints. You don't need to specify all joints of the
        //  robot. Joint names are case-sensitive.
        public string[] joint_names;
        //  A position command to the joints listed in joint_names.
        //  The order must be identical.
        //  Units are meters or radians.
        //  If displacements and velocities are filled, a profiled motion is requested.
        public double[] displacements;
        //  or position_deltas
        //  A velocity command to the joints listed in joint_names.
        //  The order must be identical.
        //  Units are m/s or rad/s.
        //  If displacements and velocities are filled, a profiled motion is requested.
        public double[] velocities;
        public double duration;

        public JointJogMsg()
        {
            this.header = new Std.HeaderMsg();
            this.joint_names = new string[0];
            this.displacements = new double[0];
            this.velocities = new double[0];
            this.duration = 0.0;
        }

        public JointJogMsg(Std.HeaderMsg header, string[] joint_names, double[] displacements, double[] velocities, double duration)
        {
            this.header = header;
            this.joint_names = joint_names;
            this.displacements = displacements;
            this.velocities = velocities;
            this.duration = duration;
        }

        public static JointJogMsg Deserialize(MessageDeserializer deserializer) => new JointJogMsg(deserializer);

        private JointJogMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.joint_names, deserializer.ReadLength());
            deserializer.Read(out this.displacements, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.velocities, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.duration);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.WriteLength(this.joint_names);
            serializer.Write(this.joint_names);
            serializer.WriteLength(this.displacements);
            serializer.Write(this.displacements);
            serializer.WriteLength(this.velocities);
            serializer.Write(this.velocities);
            serializer.Write(this.duration);
        }

        public override string ToString()
        {
            return "JointJogMsg: " +
            "\nheader: " + header.ToString() +
            "\njoint_names: " + System.String.Join(", ", joint_names.ToList()) +
            "\ndisplacements: " + System.String.Join(", ", displacements.ToList()) +
            "\nvelocities: " + System.String.Join(", ", velocities.ToList()) +
            "\nduration: " + duration.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}

//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Control
{
    [Serializable]
    public class FollowJointTrajectoryGoal : Message
    {
        public const string k_RosMessageName = "control_msgs/FollowJointTrajectory";
        public override string RosMessageName => k_RosMessageName;

        //  The trajectory for all revolute, continuous or prismatic joints
        public Trajectory.JointTrajectoryMsg trajectory;
        //  The trajectory for all planar or floating joints (i.e. individual joints with more than one DOF)
        public Trajectory.MultiDOFJointTrajectoryMsg multi_dof_trajectory;
        //  Tolerances for the trajectory.  If the measured joint values fall
        //  outside the tolerances the trajectory goal is aborted.  Any
        //  tolerances that are not specified (by being omitted or set to 0) are
        //  set to the defaults for the action server (often taken from the
        //  parameter server).
        //  Tolerances applied to the joints as the trajectory is executed.  If
        //  violated, the goal aborts with error_code set to
        //  PATH_TOLERANCE_VIOLATED.
        public JointToleranceMsg[] path_tolerance;
        public JointComponentToleranceMsg[] component_path_tolerance;
        //  To report success, the joints must be within goal_tolerance of the
        //  final trajectory value.  The goal must be achieved by time the
        //  trajectory ends plus goal_time_tolerance.  (goal_time_tolerance
        //  allows some leeway in time, so that the trajectory goal can still
        //  succeed even if the joints reach the goal some time after the
        //  precise end time of the trajectory).
        // 
        //  If the joints are not within goal_tolerance after "trajectory finish
        //  time" + goal_time_tolerance, the goal aborts with error_code set to
        //  GOAL_TOLERANCE_VIOLATED
        public JointToleranceMsg[] goal_tolerance;
        public JointComponentToleranceMsg[] component_goal_tolerance;
        public BuiltinInterfaces.DurationMsg goal_time_tolerance;

        public FollowJointTrajectoryGoal()
        {
            this.trajectory = new Trajectory.JointTrajectoryMsg();
            this.multi_dof_trajectory = new Trajectory.MultiDOFJointTrajectoryMsg();
            this.path_tolerance = new JointToleranceMsg[0];
            this.component_path_tolerance = new JointComponentToleranceMsg[0];
            this.goal_tolerance = new JointToleranceMsg[0];
            this.component_goal_tolerance = new JointComponentToleranceMsg[0];
            this.goal_time_tolerance = new BuiltinInterfaces.DurationMsg();
        }

        public FollowJointTrajectoryGoal(Trajectory.JointTrajectoryMsg trajectory, Trajectory.MultiDOFJointTrajectoryMsg multi_dof_trajectory, JointToleranceMsg[] path_tolerance, JointComponentToleranceMsg[] component_path_tolerance, JointToleranceMsg[] goal_tolerance, JointComponentToleranceMsg[] component_goal_tolerance, BuiltinInterfaces.DurationMsg goal_time_tolerance)
        {
            this.trajectory = trajectory;
            this.multi_dof_trajectory = multi_dof_trajectory;
            this.path_tolerance = path_tolerance;
            this.component_path_tolerance = component_path_tolerance;
            this.goal_tolerance = goal_tolerance;
            this.component_goal_tolerance = component_goal_tolerance;
            this.goal_time_tolerance = goal_time_tolerance;
        }

        public static FollowJointTrajectoryGoal Deserialize(MessageDeserializer deserializer) => new FollowJointTrajectoryGoal(deserializer);

        private FollowJointTrajectoryGoal(MessageDeserializer deserializer)
        {
            this.trajectory = Trajectory.JointTrajectoryMsg.Deserialize(deserializer);
            this.multi_dof_trajectory = Trajectory.MultiDOFJointTrajectoryMsg.Deserialize(deserializer);
            deserializer.Read(out this.path_tolerance, JointToleranceMsg.Deserialize, deserializer.ReadLength());
            deserializer.Read(out this.component_path_tolerance, JointComponentToleranceMsg.Deserialize, deserializer.ReadLength());
            deserializer.Read(out this.goal_tolerance, JointToleranceMsg.Deserialize, deserializer.ReadLength());
            deserializer.Read(out this.component_goal_tolerance, JointComponentToleranceMsg.Deserialize, deserializer.ReadLength());
            this.goal_time_tolerance = BuiltinInterfaces.DurationMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.trajectory);
            serializer.Write(this.multi_dof_trajectory);
            serializer.WriteLength(this.path_tolerance);
            serializer.Write(this.path_tolerance);
            serializer.WriteLength(this.component_path_tolerance);
            serializer.Write(this.component_path_tolerance);
            serializer.WriteLength(this.goal_tolerance);
            serializer.Write(this.goal_tolerance);
            serializer.WriteLength(this.component_goal_tolerance);
            serializer.Write(this.component_goal_tolerance);
            serializer.Write(this.goal_time_tolerance);
        }

        public override string ToString()
        {
            return "FollowJointTrajectoryGoal: " +
            "\ntrajectory: " + trajectory.ToString() +
            "\nmulti_dof_trajectory: " + multi_dof_trajectory.ToString() +
            "\npath_tolerance: " + System.String.Join(", ", path_tolerance.ToList()) +
            "\ncomponent_path_tolerance: " + System.String.Join(", ", component_path_tolerance.ToList()) +
            "\ngoal_tolerance: " + System.String.Join(", ", goal_tolerance.ToList()) +
            "\ncomponent_goal_tolerance: " + System.String.Join(", ", component_goal_tolerance.ToList()) +
            "\ngoal_time_tolerance: " + goal_time_tolerance.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Goal);
        }
    }
}
